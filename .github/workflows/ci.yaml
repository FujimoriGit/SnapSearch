name: iOS CI

on:
  pull_request:
    branches: ["*"]

jobs:
  build-and-test:
    # デフォルトブランチへのpushまたはPRのときに実行
    if: ${{ github.ref_name == github.event.repository.default_branch || github.event_name == 'pull_request' }}
    runs-on: macos-latest

    steps:
      # 1. リポジトリをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      # 2. DerivedDataをキャッシュ
      - name: Cache DerivedData
        uses: actions/cache@v4.3.0
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-derived-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-xcode-derived-

      # 3. Xcode のセットアップ
      - name: Setup Xcode (latest stable)
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest-stable

      # 4. SPM 依存解決
      - name: Resolve Swift Packages
        run: |
          xcodebuild \
            -project SnapSearch.xcodeproj \
            -resolvePackageDependencies

      # 6. ビルド ＆ テスト
      - name: Build and test
        run: |
          set -o pipefail
          DERIVED=$HOME/Library/Developer/Xcode/DerivedData/SnapSearch-DD

          xcodebuild build-for-testing \
            -project SnapSearch.xcodeproj \
            -scheme SnapSearch \
            -configuration Debug \
            -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro' \
            -derivedDataPath "$DERIVED" \
            -enableCodeCoverage NO \
            -skipPackagePluginValidation \
            -skipMacroValidation \
            -only-testing:SnapSearchTests

          xcodebuild test-without-building \
            -project SnapSearch.xcodeproj \
            -scheme SnapSearch \
            -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro' \
            -derivedDataPath "$DERIVED" \
            -only-testing:SnapSearchTests \
            -enableCodeCoverage NO
